<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>nicking&#39;s home</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-04-27T10:48:09.601Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>nicking</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>vue使用.sync双向绑定</title>
    <link href="http://yoursite.com/2020/04/27/vuesync/"/>
    <id>http://yoursite.com/2020/04/27/vuesync/</id>
    <published>2020-04-27T10:45:20.674Z</published>
    <updated>2020-04-27T10:48:09.601Z</updated>
    
    <content type="html"><![CDATA[<p>流下了没有技术的泪水，这个问题搞了我一个多小时，自己太菜了，努力学习啊<del>~</del>所以在我解决过后我觉得有必要写一篇简短的博客来描述这一段心酸往事，come to the point：<br>首先我们要明确自己有什么需求，就是子组件和父组件的通信，子组件修改值过后通知父组件，父组件修改过后传递给子组件，okay，建立两个组件一个是父组件（parent.vue），一个子组件（child.vue），既然要引用子组件，那么我们应该先写一个子组件<br>但是在这之前有必要先看一下效果：<br><img src="/images/2019041014071061.png" alt="效果图"><br>我们在父组件中输入，就会将111传递到自组件，在子组件中输入就会传递到父组件，这样就实现了双向绑定啦<br><strong>child.vue代码如下：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;el-input v-model&#x3D;&quot;childInput&quot;&gt;&lt;&#x2F;el-input&gt;</span><br><span class="line">    父组件传递的值： &#123;&#123;fatherInput&#125;&#125;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">  export default &#123;</span><br><span class="line">    props: &#123;</span><br><span class="line">      fatherInput: &#123;</span><br><span class="line">        type: String,</span><br><span class="line">        default: function () &#123;</span><br><span class="line">          return null</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    data() &#123;</span><br><span class="line">      return &#123;</span><br><span class="line">        childInput: &#39;&#39;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    watch: &#123;</span><br><span class="line">      fatherInput: function () &#123; &#x2F;&#x2F; 监听父组件传递过来的值</span><br><span class="line">        if (this.fatherInput !&#x3D;&#x3D; null) &#123; &#x2F;&#x2F; 如果父组件传递了值，我们就把值赋给子组件的输入框</span><br><span class="line">          this.childInput &#x3D; this.fatherInput</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      childInput: function () &#123; &#x2F;&#x2F; 监听子组件的输入框的值，随时传递给父组件</span><br><span class="line">        this.$emit(&#39;update:fatherInput&#39;, this.childInput); &#x2F;&#x2F; 将子组件的输入框的值传递给父组件 父组件需要用.sync</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><p><strong>parent.vue代码如下：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    父组件输入框：&lt;el-input v-model&#x3D;&quot;inputValue&quot;&gt;&lt;&#x2F;el-input&gt;</span><br><span class="line">    父组件值：&#123;&#123;inputValue&#125;&#125;</span><br><span class="line">    &lt;hr&#x2F;&gt;</span><br><span class="line">    引用子组件：</span><br><span class="line">    &lt;child :fatherInput.sync&#x3D;&quot;inputValue&quot;&gt;&lt;&#x2F;child&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">  import child from &#39;.&#x2F;child&#39;</span><br><span class="line">  export default &#123;</span><br><span class="line">    components: &#123;</span><br><span class="line">      child</span><br><span class="line">    &#125;,</span><br><span class="line">    data() &#123;</span><br><span class="line">      return &#123;</span><br><span class="line">        inputValue: &#39;&#39;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><p>我觉得这个要充分运用到监听器，监听值的变化，并做出相应的操作</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;流下了没有技术的泪水，这个问题搞了我一个多小时，自己太菜了，努力学习啊&lt;del&gt;~&lt;/del&gt;所以在我解决过后我觉得有必要写一篇简短的博客来描述这一段心酸往事，come to the point：&lt;br&gt;首先我们要明确自己有什么需求，就是子组件和父组件的通信，子组件修改值过
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>简介</title>
    <link href="http://yoursite.com/2020/04/27/hello-world/"/>
    <id>http://yoursite.com/2020/04/27/hello-world/</id>
    <published>2020-04-27T08:28:04.650Z</published>
    <updated>2020-04-27T10:45:15.226Z</updated>
    
    <content type="html"><![CDATA[<p>今后我将在这里发表一些生活、工作、学习、读书、爱情等一系列文章，敬请关注！！！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;今后我将在这里发表一些生活、工作、学习、读书、爱情等一系列文章，敬请关注！！！&lt;/p&gt;

      
    
    </summary>
    
    
    
  </entry>
  
</feed>
